class Node {
    int data;
    Node next;
    Node prev;

    public Node(int d) {
        this.data = d;
        this.next = null;
        this.prev = null;
    }

    public static void forwardTraversal(Node head) {
        Node temp = head;
        while (temp != null) {
            System.out.println(temp.data);
            temp = temp.next;
        }
    }

    public static void reverseTraversal(Node tail) {
        Node temp = tail;
        while (temp != null) {
            System.out.println(temp.data);
            temp = temp.prev;
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Node n1 = new Node(10);
        Node n2 = new Node(20);
        Node n3 = new Node(30);

        n1.next = n2;
        n2.prev = n1;
        n2.next = n3;
        n3.prev = n2;

        Node.forwardTraversal(n1);
        System.out.println();
        Node.reverseTraversal(n3);
    }
}
SOLUTION:
----------
10
20
30

30
20
10
